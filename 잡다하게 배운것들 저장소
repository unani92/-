# if 문을 활용한 간단한 계산기(문자열 포맷팅 연습)

opperand1 = float(input("첫 번째 숫자를 입력하시오 : "))
opperand2 = float(input("두 번째 숫자를 입력하시오 : "))
operater = input(("연산자를 입력하시오(+ - * /) : "))

if operater == "+" :
    print("%d + %d = %d"%(opperand1,opperand2,opperand1+opperand2))
elif operater == "-" :
    print("%d - %d = %d"%(opperand1,opperand2,opperand1-opperand2))
elif operater == "*" : 
    print("{} x {} = {}".format(opperand1,opperand2,opperand1*opperand2))
elif operater == "/" : 
    print("%d ÷ %d = %.2f"%(opperand1,opperand2,opperand1/opperand2))
else : 
    print("{}는 지원하지 않는 연산자입니다.".format(operater))
-------------------------------------------------------------------------------------------------------
#range 함수 사용법 연습
print(list(range(9))) # 디폴트는 0에서 a-1까지 값 출력
print(list(range(1,9))) #범위 설정 시 시작부터 a-1까지 값 출력
-------------------------------------------------------------------------------------------------------
# for문 활용한 구구단 출력 코드 1. 
dan = range(1, 10)
num = range(1, 10)
for i in dan :
    for j in num :
        print("{} X {} = {}".format(i,j,i*j))
        if j == 9 :         # j에 9까지 넣고 다 돌리고 나면 밑에 공백 줄 한줄 삽입하는 코드
            print()
            
# for문 활용한 구구단 출력 코드 2.
dan = range(1, 10)
num = range(1, 10)
for i in dan :
    for j in num :
        print("{} X {} = {}".format(i,j,i*j))
    print()                 # 바깥 for 문으로 돌아가기 전에 공백 줄 한줄 삽입 : 안쪽 for문 바로 밑에서 코드 삽입
----------------------------------------------------------------------------------------------------------------
# while문을 활용한 리스트 원소 합 구하기
score = [80, 50, 78, 96, 64]
total = 0
i = 0
while i < len(score) :
    total += score[i]
    i += 1                  # i가 1씩 증가한다는 것을 설정해주지 않으면 무한루프에 빠짐
print(total)
-----------------------------------------------------------------------------------------------------------
# 랜덤함수(choice / sample)
# menu 리스트를 만들어주세요.
import random 
menu = ["소고기","돼지고기","와퍼","장어곰탕"]
phone_book = {"소고기": '010-1245-7878',
              "돼지고기": "010-8754-8888",
              "와퍼": "010-4848-4885",
              "장어곰탕": "010-4546-8282"}
food = random.choice(menu)    # 언제든지 수정할 수 있게 객체에 담는 버릇을 들이자
# print(food, phone_book[food])
# print(food + "입니다." + "전화번호는" + phone_book[food] + "입니다.")
print(f"{food}입니다. 전화번호는 {phone_book[food]}입니다.")            # 문자열포맷팅 최신기술!!!!ㄷㄷ

# 로또 번호 추첨(샘플링 함수 사용)
import random
numbers = range(1,46)
lotto = random.sample(numbers,6)
print(sorted(lotto))
--------------------------------------------------------------------------------------------------------------
# break : 반복문이 돌다가 break를 만나면 반복문을 빠져나오는 것

answer = ""
while True :
    answer = input("명령을 입력하세요 \n 'q'를 입력하면 프로그램이 종료됩니다. : ")
    if answer == "q" :
        break
    print("{}를 입력하였습니다.".format(answer))
--------------------------------------------------------------------------------------------------------------
# continue : 해당 부분을 건너뛰고 다음 순서로 넘어가는 것

num = [1,2,3,4,5,6,7,8,9,10]
total = 0
for i in num :
    if (i%3 == 0) :
        continue
    total += i

print(total)

print("프로그램을 종료합니다.")
---------------------------------------------------------------------------------------------------------------
# def 사용자 정의함수 만들기 
def func_par_returns(x,y,z) : 
    print("매개변수로 전달된 값은 {} {} {} 입니다.".format(x,y,z))          # format 함수의 매개변수로 인해 출력되는 것
    print("매개변수와 출력값이 있는 함수입니다.")                           # 매개변수랑 상관 없이 출력되는 것
    return "hello python"                                               # func_par_returns 함수의 매개변수에 따른 출력 결과

ref_var = func_par_returns(4,5,6)
print("func_par_returns 함수가 출력한 값 : {}".format(ref_var))
